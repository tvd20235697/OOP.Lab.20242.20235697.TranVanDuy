
--------------17-----------------------

1. Lớp nào nên implement giao diện Comparable?
Lớp nên implement Comparable<T> là lớp đại diện cho đối tượng cần sắp xếp tự nhiên, cụ thể trong bài toán này là lớp Media, hoặc các lớp con cụ thể như Book, DVD, CD nếu mỗi loại có quy tắc so sánh riêng.
→ Nếu có một thứ tự mặc định áp dụng chung cho tất cả các loại media, thì implement trong lớp Media là hợp lý.

2. Trong các lớp đó, phương thức compareTo() nên được implement thế nào để phản ánh quy tắc sắp xếp mong muốn?
Bạn sẽ override phương thức compareTo() sao cho thể hiện thứ tự mặc định của đối tượng. Ví dụ:

@Override
public int compareTo(Media other) {
    int titleComparison = this.getTitle().compareToIgnoreCase(other.getTitle());
    if (titleComparison != 0) return titleComparison;

    // Nếu tiêu đề giống nhau, so sánh theo giá
    return Float.compare(this.getCost(), other.getCost());
}
→ Như vậy, đối tượng Media sẽ được sắp xếp tăng dần theo tiêu đề, sau đó theo giá.

 3. Có thể có hai quy tắc sắp xếp khác nhau (ví dụ: theo tiêu đề rồi giá, hoặc theo giá rồi tiêu đề) khi dùng Comparable không?
Không. Giao diện Comparable chỉ cho phép định nghĩa một quy tắc sắp xếp mặc định duy nhất qua phương thức compareTo().

=> Nếu muốn dùng nhiều cách sắp xếp khác nhau, bạn nên dùng lớp Comparator để truyền quy tắc sắp xếp khác vào phương thức Collections.sort() hoặc list.sort().

Ví dụ:

Comparator<Media> compareByCostThenTitle = Comparator
    .comparing(Media::getCost)
    .thenComparing(Media::getTitle);

Collections.sort(mediaList, compareByCostThenTitle);
4. Giả sử DVD có quy tắc sắp xếp khác (theo tiêu đề, sau đó là độ dài giảm dần, rồi giá), làm thế nào để chỉnh sửa code để hỗ trợ điều này?
Bạn có thể override phương thức compareTo() riêng cho lớp DigitalVideoDisc (DVD) như sau:

@Override
public int compareTo(Media other) {
    if (other instanceof DigitalVideoDisc dvd) {
        int titleComparison = this.getTitle().compareToIgnoreCase(dvd.getTitle());
        if (titleComparison != 0) return titleComparison;

        // So sánh độ dài giảm dần
        int lengthComparison = Integer.compare(dvd.getLength(), this.getLength());
        if (lengthComparison != 0) return lengthComparison;

        return Float.compare(this.getCost(), dvd.getCost());
    } else {
        // fallback nếu so sánh với loại Media khác
        return super.compareTo(other);
    }
}
=> Như vậy bạn vẫn giữ quy tắc mặc định trong Media, nhưng DVD lại có logic riêng phù hợp với yêu cầu.